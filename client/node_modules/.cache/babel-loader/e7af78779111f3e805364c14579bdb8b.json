{"ast":null,"code":"import io from 'socket.io-client';\nconst socket = io('');\nexport function initiateSocket() {\n  socket.connect();\n}\nlet joined = false;\nlet myId = '';\nlet callback;\nexport function registerCallback(cb) {\n  callback = cb;\n}\nexport function joinRoom(data) {\n  console.log('Trying to join room socket', data);\n  myId = data;\n\n  if (joined) {\n    return;\n  }\n\n  socket.emit('message', {\n    action: 'join_room',\n    room_id: data\n  });\n  joined = true;\n}\nsocket.on('connect', () => {\n  console.log('Setting Socket Status to true');\n\n  if (myId !== '') {\n    joinRoom(myId);\n  }\n});\nsocket.on('disconnect', () => {\n  joined = false;\n});\nsocket.on('message', data => {\n  console.log('socket event received', data);\n  callback(data.payload);\n});","map":{"version":3,"sources":["/Users/cloudkibo/Kibo/miniapp/client/src/socket/index.js"],"names":["io","socket","initiateSocket","connect","joined","myId","callback","registerCallback","cb","joinRoom","data","console","log","emit","action","room_id","on","payload"],"mappings":"AAAA,OAAOA,EAAP,MAAe,kBAAf;AACA,MAAMC,MAAM,GAAGD,EAAE,CAAC,EAAD,CAAjB;AAEA,OAAO,SAASE,cAAT,GAA2B;AAChCD,EAAAA,MAAM,CAACE,OAAP;AACD;AAED,IAAIC,MAAM,GAAG,KAAb;AACA,IAAIC,IAAI,GAAG,EAAX;AACA,IAAIC,QAAJ;AAEA,OAAO,SAASC,gBAAT,CAA2BC,EAA3B,EAA+B;AACpCF,EAAAA,QAAQ,GAAGE,EAAX;AACD;AAED,OAAO,SAASC,QAAT,CAAmBC,IAAnB,EAAyB;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CF,IAA1C;AACAL,EAAAA,IAAI,GAAGK,IAAP;;AACA,MAAIN,MAAJ,EAAY;AACV;AACD;;AACDH,EAAAA,MAAM,CAACY,IAAP,CAAY,SAAZ,EAAuB;AACrBC,IAAAA,MAAM,EAAE,WADa;AAErBC,IAAAA,OAAO,EAAEL;AAFY,GAAvB;AAIAN,EAAAA,MAAM,GAAG,IAAT;AACD;AAEDH,MAAM,CAACe,EAAP,CAAU,SAAV,EAAqB,MAAM;AACzBL,EAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;;AACA,MAAIP,IAAI,KAAK,EAAb,EAAiB;AACfI,IAAAA,QAAQ,CAACJ,IAAD,CAAR;AACD;AACF,CALD;AAOAJ,MAAM,CAACe,EAAP,CAAU,YAAV,EAAwB,MAAM;AAC5BZ,EAAAA,MAAM,GAAG,KAAT;AACD,CAFD;AAIAH,MAAM,CAACe,EAAP,CAAU,SAAV,EAAsBN,IAAD,IAAU;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCF,IAArC;AACAJ,EAAAA,QAAQ,CAACI,IAAI,CAACO,OAAN,CAAR;AACD,CAHD","sourcesContent":["import io from 'socket.io-client'\nconst socket = io('')\n\nexport function initiateSocket () {\n  socket.connect()\n}\n\nlet joined = false\nlet myId = ''\nlet callback\n\nexport function registerCallback (cb) {\n  callback = cb\n}\n\nexport function joinRoom (data) {\n  console.log('Trying to join room socket', data)\n  myId = data\n  if (joined) {\n    return\n  }\n  socket.emit('message', {\n    action: 'join_room',\n    room_id: data\n  })\n  joined = true\n}\n\nsocket.on('connect', () => {\n  console.log('Setting Socket Status to true')\n  if (myId !== '') {\n    joinRoom(myId)\n  }\n})\n\nsocket.on('disconnect', () => {\n  joined = false\n})\n\nsocket.on('message', (data) => {\n  console.log('socket event received', data)\n  callback(data.payload)\n})\n"]},"metadata":{},"sourceType":"module"}